#!/bin/sh

# PAK: Multi-Combine all Base HighlightJs syntax source scripts # r.20210610
# 	from: mod-highlight-syntax/views/js/jshighlight/syntax/*.js
# 	to:   mod-highlight-syntax/views/js/jshighlight/syntax-base.pak.js

THE_FILE=../mod-highlight-syntax/views/js/jshighlight/syntax-base.pak.js
THE_MARKERTPL_FILE=../mod-highlight-syntax/views/js/jshighlight/syntax/tpl/markertpl.js
THE_MARKERTPL_ALT_FILE=../mod-svn/views/js/highlightjs/syntax/markertpl.js

echo "Regenerating HighlightJs Syntax Javascript Package: ${THE_FILE}"

echo "" > ${THE_FILE}
echo "// # JS Package: syntax-base.pak.js :: #START# :: @ generated from mod-highlight-syntax/views/js/jshighlight/syntax/*.js" >> ${THE_FILE}
echo "// Included Files: web/*.js ; tpl/*.js ; lnx/*.js ; srv/*.js ; net/*.js ; lang/*.js #" >> ${THE_FILE}
echo "" >> ${THE_FILE}
echo "// ### DO NOT EDIT THIS FILE AS IT WILL BE OVERWRITTEN EACH TIME THE INCLUDED SCRIPTS WILL CHANGE !!! ###" >> ${THE_FILE}
echo "" >> ${THE_FILE}

#
for SYNTAX_TYPE_SUB in web tpl lnx srv net lang; do
	echo "Regenerating HighlightJs Syntax[${SYNTAX_TYPE_SUB}] Javascript Package"
	SYNTAX_JS_SUB=`ls -A ../mod-highlight-syntax/views/js/jshighlight/syntax/${SYNTAX_TYPE_SUB}/*.js`
	for i in $SYNTAX_JS_SUB; do
		if [ -f "${i}" ]; then
			#==
			BASE_FILE=`basename "${i}"`
			echo "Javascript: ${SYNTAX_TYPE_SUB}/${BASE_FILE}"
			#==
			echo "// === ${SYNTAX_TYPE_SUB}/${BASE_FILE}" >> ${THE_FILE}
			echo "" >> ${THE_FILE}
			cat ${i} >> ${THE_FILE}
			echo "" >> ${THE_FILE}
			#==
		else
			#==
			echo "FAIL: ${i} is not a file for ${SYNTAX_TYPE_SUB}"
			#==
		fi
	done
	#
done
#

echo "// ===== [#]" >> ${THE_FILE}
echo "" >> ${THE_FILE}
echo "// # JS Package: syntax-base.pak.js :: #END#" >> ${THE_FILE}
echo "" >> ${THE_FILE}

echo "Updating MarkerTPL Alternate File: ${THE_MARKERTPL_ALT_FILE} from ${THE_MARKERTPL_FILE}"
cp -p ${THE_MARKERTPL_FILE} ${THE_MARKERTPL_ALT_FILE}

echo "=== [DONE !] ==="

# END
